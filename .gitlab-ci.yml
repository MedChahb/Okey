default:
  image: python:3.10.13-bookworm
  cache:
    paths:
      - .cache/pip
      - .venv/
      - .cache/pre-commit
  before_script:
    # Fix GitLab Docker runner permission issues
    - ls -ld .git/ | awk '{print $3}' > RUNNER_USER
    - chown -R $(whoami) .
    # Set up Python
    - python --version ; pip --version # For debugging
    - python -m venv .venv/
    - source .venv/bin/activate
    - python -m pip install --upgrade pip
    # Install Python packages
    - pip install -r requirements.txt
    # Set up .NET
    - wget https://packages.microsoft.com/config/debian/12/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
    - dpkg -i packages-microsoft-prod.deb
    - rm packages-microsoft-prod.deb
    - apt update && apt -y install dotnet-sdk-8.0=8.0.101-1
    # Install .NET packages
    - dotnet tool restore
  after_script:
    # Fix GitLab Docker runner permission issues
    - chown -fR $(cat RUNNER_USER) .cache/pip/ .venv/ .cache/pre-commit/
# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PRE_COMMIT_HOME: "$CI_PROJECT_DIR/.cache/pre-commit"
  RELEASE_TAG: '/^v\d+\.\d+\.\d+$/'
test 1/2:
  stage: test
  script:
    - pre-commit run -av
  rules:
    - if: $CI_COMMIT_BRANCH
  allow_failure: true
  tags:
    - kubernetes
test 2/2:
  stage: test
  script:
    - dotnet docfx docs/docfx.json
    - cp -r docs/_site public
  rules:
    - if: $CI_COMMIT_BRANCH && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
  artifacts:
    paths:
      - public
  tags:
    - kubernetes
pages:
  stage: deploy
  script:
    - dotnet docfx docs/docfx.json
    - cp -r docs/_site public
  rules:
    - if: '$CI_COMMIT_TAG =~ $RELEASE_TAG' # Run this job when a release tag is created
  artifacts:
    paths:
      - public
  tags:
    - kubernetes
release_job:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: '$CI_COMMIT_TAG =~ $RELEASE_TAG' # Run this job when a release tag is created
  before_script:
    - apk add --update --no-cache git python3 && ln -sf python3 /usr/bin/python
    - git config --global --add safe.directory "$CI_PROJECT_DIR"
  script:
    - echo "Running release_job for $CI_COMMIT_TAG"
    - scripts/create_latest_release_description.sh > RELEASE_NOTES.md
  release: # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
    tag_name: $CI_COMMIT_TAG
    name: 'Release $CI_COMMIT_TAG'
    description: './RELEASE_NOTES.md'
  tags:
    - kubernetes
