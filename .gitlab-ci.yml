default:
  image: registry.app.unistra.fr/okaybytes/okey/projet-integrateur-cicd
  cache:
    paths:
      - .cache/pre-commit
  before_script:
    # Fix Unistra GitLab Docker runner permission issues
    - ls -ld .git/ | awk '{print $3}' > RUNNER_USER
    - chown -R $(whoami) .
  after_script:
    # Fix Unistra GitLab Docker runner permission issues
    - chown -fR $(cat RUNNER_USER) .cache/pip/ .venv/ .cache/pre-commit/
stages:
  - build
  - test
  - deploy
variables:
  PRE_COMMIT_HOME: "$CI_PROJECT_DIR/.cache/pre-commit"
  RELEASE_TAG: '/^v\d+\.\d+\.\d+$/'
test 1/2:
  stage: test
  script:
    - pre-commit run -a
  rules:
    - if: $CI_COMMIT_BRANCH
  allow_failure: true
  tags:
    - kubernetes
test 2/2:
  stage: test
  script:
    - dotnet docfx docs/docfx.json
    - cp -r docs/_site public
  rules:
    - if: $CI_COMMIT_BRANCH && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
  artifacts:
    paths:
      - public
  tags:
    - kubernetes
docker:
  image: docker:latest
  stage: build
  variables:
    IMAGE_NAME: projet-integrateur-cicd
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE/$IMAGE_NAME -f docker/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/$IMAGE_NAME
  after_script: ""
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - docker/Dockerfile
      when: always
  tags:
    - kubernetes
pages:
  stage: deploy
  script:
    - dotnet docfx docs/docfx.json
    - cp -r docs/_site public
  rules:
    - if: '$CI_COMMIT_TAG =~ $RELEASE_TAG' # Run this job when a release tag is created
  artifacts:
    paths:
      - public
  tags:
    - kubernetes
release_job:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: '$CI_COMMIT_TAG =~ $RELEASE_TAG' # Run this job when a release tag is created
  before_script:
    - apk add --update --no-cache git python3 && ln -sf python3 /usr/bin/python
    - git config --global --add safe.directory "$CI_PROJECT_DIR"
  script:
    - echo "Running release_job for $CI_COMMIT_TAG"
    - scripts/create_latest_release_description.sh > RELEASE_NOTES.md
  release: # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
    tag_name: $CI_COMMIT_TAG
    name: 'Release $CI_COMMIT_TAG'
    description: './RELEASE_NOTES.md'
  tags:
    - kubernetes
